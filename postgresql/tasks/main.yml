---
# tasks file for postgresql-server

- name: Check that the PostgreSQL data root exist
  stat:
    path: "{{ pg_data_root }}/pg_wal"
  register: pg_data_result

- name: Update apt cache
  apt:
    update_cache: yes
  when:
    - not pg_data_result.stat.exists 
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian" 

- name: Install System dependencies for Ubuntu
  apt:
    update_cache: no
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian" 

 
- name: Pre-config postgresql repository
  shell: |
      curl https://www.postgresql.org/media/keys/ACCC4CF8.asc |  \
       gpg --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null && \
      echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
  args:
     executable: /usr/bin/bash 
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian"    

- name: Update apt cache
  apt:
    update_cache: yes
  when:
    - not pg_data_result.stat.exists 
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian" 

- name: Install Postgresql packages for Ubuntu
  apt:
    update_cache: no
    pkg:
      - "postgresql-{{ pg_version }}"
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian" 

- name: Postgresql data root dir creation
  file:
    path: "{{ pg_data_root }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0750'


- name: Install sudo for testing  purpose MOLECULE
  apt:
    update_cache: no
    pkg:
      - sudo
  when:
    - molecule_yml is defined
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version == "20.04" or "22.04"
    - ansible_distribution_file_variety == "Debian" 

- name: Initialize postgresql db at new location
  command: sudo -u postgres /lib/postgresql/{{ pg_version }}/bin/initdb -D {{ pg_data_root }}
  when:
    - not pg_data_result.stat.exists


- name: Configure postgresql.conf  template common
  template:
      src: postgresql.conf.j2
      dest: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
      backup: yes
      mode: '0600'  
  notify: restart_postgresql 
  when: pg_version|string != "15" 

- name: Configure postgresql.conf template for 15 without stats_temp
  template:
      src: postgresql15.conf.j2
      dest: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
      backup: yes
      mode: '0600'  
  notify: restart_postgresql 
  when: pg_version|string == "15" 



